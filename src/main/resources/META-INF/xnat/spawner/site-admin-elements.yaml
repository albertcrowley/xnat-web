
tabGroups:
#    dashboard: Dashboard
    xnatSetup: XNAT Setup
    manageAccess: Manage Access
    manageData: Manage Data
    processing: Processing
    projectCustomization: Project Customization
    advanced: Advanced XNAT Settings
    other: Other


siteId:
    kind: panel.input.text
    id: siteId
    name: siteId
    label: Site ID
    validation: required id onblur
    description: >
        The id used to refer to this site (also used to generate database ids).
        The Site ID must start with a letter and contain only letters, numbers
        and underscores. It should be a short, one-word name or acronym which
        describes your site. No spaces or non-alphanumeric characters.

siteDescriptionPage:
    tag: input
    element:
        type: text
        id: siteDescriptionPage
        name: siteDescriptionPage
        size: 30
    after: "<p class='description'>Specify a velocity template file to display on the login page</p>"

siteDescriptionText:
    tag: textarea
    element:
        id: siteDescriptionText
        name: siteDescriptionText
        rows: 8
    after: "<p class='description'>Specify a simple text description of this site.</p>"

siteDescriptionType:
    kind: panel.element
    #id: siteDescriptionType
    #name: siteDescriptionType
    label: Site Description
    contents:
        info:
            tag: p
            element:
                style: "margin: 3px 0 8px 0;"
            content: Select a site description option below
        siteDescriptionTypePage:
            tag: input|data-value=Page
            element:
                type: radio
                name: siteDescriptionType
                id: siteDescriptionTypePage
                value: Page
            after:
                label:
                    tag: label.pad5h|for=siteDescriptionTypePage
                    content: Page
        siteDescriptionTypeText:
            tag: input|data-value=Text
            element:
                type: radio
                name: siteDescriptionType
                id: siteDescriptionTypeText
                value: Text
            after:
                label:
                    tag: label.pad5h|for=siteDescriptionTypeText
                    content: Text (Markdown)
        pagePath:
            tag: div.input-bundle.page
            contents:
                ${siteDescriptionPage}
        pageText:
            tag: div.input-bundle.text
            contents:
                ${siteDescriptionText}
        siteInfoJs:
            tag: script
            element:
                src: ~/scripts/xnat/admin/siteInfo.js

siteLoginLanding:
    kind: panel.input.text
    id: siteLoginLanding
    name: siteLoginLanding
    label: Site Login Landing
    description: "The page users will land on immediately after logging in."

siteLandingLayout:
    kind: panel.input.text
    id: siteLandingLayout
    name: siteLandingLayout
    label: Site Landing Layout

siteHome:
    kind: panel.input.text
    id: siteHome
    name: siteHome
    label: Site Home
    description: "The page users will land on by clicking the XNAT logo in the menu bar."

siteHomeLayout:
    kind: panel.input.text
    id: siteHomeLayout
    name: siteHomeLayout
    label: Site Home Layout

siteUrl:
    kind: panel.input.text
    id: siteUrl
    name: siteUrl
    label: Site Url
    validation: required url
    description: >
        The address you want visible to users in emails, and other external links. This should be a
        functional address (i.e. if the user pasted this address in their web browser, they should
        come to the site). localhost only works if the web browser is located on the same machine.
        You are required to guarantee that this address is functional for reaching the site.

adminEmail:
    kind: panel.input.email
    id: adminEmail
    name: adminEmail
    label: Site Admin Email
    description: >
        The administrative email account to receive system emails. This address will receive frequent emails
        on system events, such as errors, processing completion, new user registration and so on. These emails
        can be configured on the Notifications tab.

fileSystemSettingsWarning:
    someInfo:
        tag: div.message
        element:
            html: >
                These settings must be defined during initial application configuration,
                and are seldom, if ever, changed.
            style:
                fontWeight: bold
archivePath:
    kind: panel.input.text
    id: archivePath
    name: archivePath
    label: Archive Path
    validation: required path
    description: ""
    element:
        disabled: true
cachePath:
    kind: panel.input.text
    id: cachePath
    name: cachePath
    label: Cache Path
    validation: required path
    description: ""
prearchivePath:
    kind: panel.input.text
    id: prearchivePath
    name: prearchivePath
    label: Prearchive Path
    validation: required path
    description: ""
ftpPath:
    kind: panel.input.text
    id: ftpPath
    name: ftpPath
    label: FTP Path
    validation: required path
    description: ""
buildPath:
    kind: panel.input.text
    id: buildPath
    name: buildPath
    label: Build Path
    validation: required id onblur
    description: ""
pipelinePath:
    kind: panel.input.text
    id: pipelinePath
    name: pipelinePath
    label: Pipeline Path
    validation: required id onblur
    description: ""
zipExtensions:
    kind: panel.input.text
    id: zipExtensions
    name: zipExtensions
    label: Zip Extensions
checksums:
    kind: panel.input.checkbox
    id: checksums
    name: checksums
    label: Checksums?
    description: >
        Indicates whether checksums should be calculated for each image file as it's archived.
        Activating this provides greater assurance of data integrity, but may add significant
        overhead to the archive process.
#checksumsPropertyChangedListener:
#    kind: panel.input.text
#    id: checksumsPropertyChangedListener
#    name: checksums.property.changed.listener
#    label: Checksums Property Changed Listener?

siteInfo:
    kind: panel.form
    name: siteInfo
    label: Site Information
    method: POST
    contentType: json
    action: /xapi/siteConfig/batch
    load: XNAT.data.siteConfig
    refresh: /xapi/siteConfig
    contents:
        ${siteId}
        ${siteUrl}
        ${siteDescriptionType}
        ${siteLoginLanding}
#        ${siteLandingLayout}
        ${siteHome}
#        ${siteHomeLayout}

adminInfo:
    kind: panel.form
    name: adminInfo
    label: Admin Information
    method: POST
    contentType: json
    action: /xapi/siteConfig/batch
    load: XNAT.data.siteConfig
    refresh: /xapi/siteConfig
    contents:
        ${adminEmail}

generalSecuritySettings:
    kind: panel.form
    name: generalSecuritySettings
    label: General Site Security Settings
    method: POST
    contentType: json
    action: /xapi/siteConfig/batch
    load: XNAT.data.siteConfig
    refresh: /xapi/siteConfig
    contents:
        securityChannel:
            kind: panel.select.single
            id: securityChannel
            name: security.channel
            label: Security Channel
            options:
                any:
                    label: Any
                    value: any
                http:
                    label: http
                    value: http
                https:
                    label: https
                    value: https
            element:
                id: security-channel
                title: Security Channel
        requireLogin:
            kind: panel.input.checkbox
            id: requireLogin
            name: requireLogin
            label: Require User Login
            description: "If checked, then only registered users will be able to access your site. If false, anyone visiting your site will automatically be logged in as 'guest' with access to public data."
        restrictUserListAccessToAdmins:
            kind: panel.input.checkbox
            id: restrictUserListAccessToAdmins
            name: restrictUserListAccessToAdmins
            label: "Restrict user list access to site administrators?"
            description: "Should this site restrict access to the list of system users to site administrators only? If turned on, the site is more secure, but this restricts project owners from being able to administer users in their projects directly."
        uiAllowNonAdminProjectCreation:
            kind: panel.input.checkbox
            id: uiAllowNonAdminProjectCreation
            name: UI.allow-non-admin-project-creation
            label: "Allow non-administrators to create projects?"
            description: "Should this site allow non-administrator users to create new projects? If turned on, the site is more secure, but this can make it more difficult for regular users to create new projects for their research efforts."

userLoginsSessionControls:
    kind: panel.form
    name: userLoginsSessionControls
    label: User Logins / Session Controls
    method: POST
    action: /xapi/siteConfig/batch
    load: XNAT.data.siteConfig
    refresh: /xapi/siteConfig
    contentType: json
    contents:
        sessionTimeout:
            kind: panel.input.text
            id: sessionTimeout
            name: sessionTimeout
            label: Session Timeout
            description: >
              Interval for timing out user sessions. Uses
              <a target="_blank" href="http://www.postgresql.org/docs/9.0/static/functions-datetime.html">PostgreSQL interval notation</a>
        aliasTokenTimeout:
            kind: panel.input.text
            id: aliasTokenTimeout
            name: aliasTokenTimeout
            label: Alias Token Timeout
            description: >
              Interval for timing out alias tokens. Uses
              <a target="_blank" href="http://www.postgresql.org/docs/9.0/static/functions-datetime.html">PostgreSQL interval notation</a>
        aliasTokenTimeoutSchedule:
            kind: panel.input.text
            id: aliasTokenTimeoutSchedule
            name: aliasTokenTimeoutSchedule
            label: Alias Token Timeout Schedule
            description: >
              How often to check alias tokens for timeout (0 0 * * * * means it runs every hour). Uses
              <a target="_blank" href="http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/scheduling/support/CronSequenceGenerator.html">Cron notation</a>
        sessionTimeoutMessage:
            kind: panel.textarea
            id: sessionTimeoutMessage
            name: sessionTimeoutMessage
            label: Session Timeout Message
            description: Alert message provided to users after a session timeout. TIMEOUT_TIME will be replaced by the timeout time.
#        allowResumeOnNextLogin:
#            kind: panel.input.checkbox
#            id: allow-resume-on-next-login
#            name: allowResumeOnNextLogin
#            label: Allow Resume On Next Login?
#            description: Allow user to resume where they left off, if logging back in after a session timeout?
        maximumConcurrentSessions:
            kind: panel.input.number
            id: maximumConcurrentSessions
            name: sessions.concurrent_max
            label: Maximum Concurrent Sessions
            description: The maximum number of permitted sessions a user can have open simultaneously
        loginFailureMessage:
            kind: panel.textarea
            id: loginFailureMessage
            name: UI.login_failure_message
            label: Login Failure Message
            description: Text to show when a user fails to login
            value: "?? XNAT:data:siteConfig:UI.login_failure_message"
        maximumFailedLogins:
            kind: panel.input.number
            id: maximumFailedLogins
            name: maxFailedLogins
            label: Maximum Failed Logins
            description: Number of failed login attempts before accounts are temporarily locked. (-1 disables feature)
        failedLoginLockoutDuration:
            kind: panel.input.text
            id: failedLoginLockoutDuration
            name: maxFailedLoginsLockoutDuration
            label: Failed Logins Lockout Duration
            description: >
              Interval of time to lock user accounts that have exceeded the max_failed_logins count. Uses
              <a target="_blank" href="http://www.postgresql.org/docs/9.0/static/functions-datetime.html">PostgreSQL interval notation</a>
        resetFailedLoginsSchedule:
            kind: panel.input.text
            id: resetFailedLoginsSchedule
            name: resetFailedLoginsSchedule
            label: Reset Failed Logins Schedule
            description: >
              How often to check if the Failed Logins Lockout Duration time has expired so locked out users can be allowed to log in again (0 0 * * * * means it runs every hour). Uses
              <a target="_blank" href="http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/scheduling/support/CronSequenceGenerator.html">Cron notation</a>
        userInactivityLockout:
            kind: panel.input.text
            id: userInactivityLockout
            name: inactivityBeforeLockout
            label: User Inactivity Lockout
            description: >
              Interval of inactivity before a user account is disabled. Uses
              <a target="_blank" href="http://www.postgresql.org/docs/9.0/static/functions-datetime.html">PostgreSQL interval notation</a>
        inactivityBeforeLockoutSchedule:
            kind: panel.input.text
            id: inactivityBeforeLockoutSchedule
            name: inactivityBeforeLockoutSchedule
            label: Inactivity Lockout Schedule
            description: >
              How often to check user accounts for inactivity (0 0 1 * * * means it runs at 1AM every day). Uses
              <a target="_blank" href="http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/scheduling/support/CronSequenceGenerator.html">Cron notation</a>


passwords:
    kind: panel.form
    name: passwords
    label: Passwords
    method: POST
    action: /xapi/siteConfig/batch
    contentType: json
    load: XNAT.data.siteConfig
    refresh: /xapi/siteConfig
    contents:
        passwordComplexity:
            kind: panel.input.text
            id: passwordComplexity
            name: passwordComplexity
            label: Password Complexity
            description: Must be a valid regular expression.
        passwordComplexityMessage:
            kind: panel.textarea
            id: passwordComplexityMessage
            name: passwordComplexityMessage
            label: Password Complexity Message
        passwordExpirationType:
            kind: panel.select.single
            id: passwordExpirationType
            name: passwordExpirationType
            label: passwordExpirationType
            value: Interval
            options:
                Interval:
                    label: Interval
                    value: Interval
                Date:
                    label: Date
                    value: Date
        passwordExpirationInterval:
            kind: panel.input.text
            id: passwordExpirationInterval
            name: passwordExpirationInterval
            label: Password Expiration (Interval)
            description: >
              Interval of time after which unchanged passwords expire and users have to change them. Enter "0" to disable. Uses
              <a target="_blank" href="http://www.postgresql.org/docs/9.0/static/functions-datetime.html">PostgreSQL interval notation</a>
        passwordExpirationDate:
            kind: panel.input.text
            id: passwordExpirationDate
            name: passwordExpirationDate
            label: Password Expiration (Date)
            description: Expire passwords that were last changed before this date and require those users to change them. Enter "0" to disable. Dates must be formatted MM/DD/YYYY
        passwordReuseRestriction:
            kind: panel.select.single
            id: passwordReuseRestriction
            name: passwordReuseRestriction
            label: Password Reuse Restriction
            options:
                None:
                    label: None
                    value: None
                Historical:
                    label: Historical
                    value: Historical
        passwordHistoryDuration:
            kind: panel.input.text
            id: passwordHistoryDuration
            name: passwordHistoryDuration
            label: Password History
            description: >
              Interval for which users cannot reuse an old password of theirs. Uses
              <a target="_blank" href="http://www.postgresql.org/docs/9.0/static/functions-datetime.html">PostgreSQL interval notation</a>
        requireSaltedPasswords:
            kind: panel.input.checkbox
            id: requireSaltedPasswords
            name: requireSaltedPasswords
            label: Require Passwords To Be Salted

csrf:
    kind: panel.form
    name: csrf
    label: CSRF
    method: POST
    action: /xapi/siteConfig/batch
    contentType: json
    load: XNAT.data.siteConfig
    refresh: /xapi/siteConfig
    contents:
        enableCsrfToken:
            kind: panel.input.checkbox
            id: enableCsrfToken
            name: enableCsrfToken
            label: Require CSRF Token?
            description: Should this site require the use of a token to prevent CSRF attacks on POST, PUT, and DELETEs?
        csrfEmailAlert:
            kind: panel.input.checkbox
            id: csrfEmailAlert
            name: csrfEmailAlert
            label: CSRF Email Alert
            description: "Should this site send an email to the site admin whenever a CSRF attack is attempted?"

securityServices:
    kind: panel.form
    name: securityServices
    label: Security Services
    action: /xapi/siteConfig/batch
    method: POST
    contentType: json
    load: XNAT.data.siteConfig
    refresh: /xapi/siteConfig
    contents:
        securityServicesFeatureDefault:
            kind: panel.input.text
            id: securityServicesFeatureDefault
            name: security.services.feature.default
            label: Feature Default
        securityServicesFeatureRepoDefault:
            kind: panel.input.text
            id: securityServicesFeatureRepoDefault
            name: security.services.featureRepository.default
            label: Feature Repository Default
        securityServicesRoleDefault:
            kind: panel.input.text
            id: securityServicesRoleDefault
            name: security.services.role.default
            label: Role Default
        securityServicesRoleRepositoryDefault:
            kind: panel.input.text
            id: securityServicesRoleRepositoryDefault
            name: security.services.roleRepository.default
            label: Role Repository Default

emailServerSettings:
    kind: panel.form
    method: POST
    action: /xapi/notifications/batchMail
    contentType: json
    load: XNAT.data.notifications
    refresh: /xapi/notifications
    name: emailServerSettings
    label: Mail Server Settings
    contents:
        smtpEnabled:
            kind: panel.input.checkbox
            id: smtpEnabled
            name: smtp.enabled
            label: "Enable SMTP?"
        hostname:
            kind: panel.input.text
            name: host
            label: Host
            placeholder: localhost
        port:
            kind: panel.input.number
            name: port
            label: Port
            placeholder: 587
        username:
            kind: panel.input.text
            name: username
            label: Username
            placeholder: name@host.org
        password:
            kind: panel.input.password
            name: password
            label: Password
        protocol:
            kind: panel.input.text
            name: protocol
            label: Protocol
            placeholder: smtp
        # subhead breaks up panel items
        mailServerProperties:
            kind: panel.subhead
            name: mailServerProperties
            label: Properties
        smtpAuth:
            kind: panel.input.checkbox
            name: mail.smtp.auth
            label: SMTP Auth?
        smtpStartTls:
            kind: panel.input.checkbox
            name: mail.smtp.starttls.enable
            label: Start TLS?
        smtpSSLTrust:
            kind: panel.input.text
            name: mail.smtp.ssl.trust
            label: SSL Trust
            placeholder: localhost
        emailPrefix:
            kind: panel.input.text
            name: emailPrefix
            label: Email Prefix
            placeholder: XNAT

notifications:
    kind: panel.form
    name: notifications
    label: Notifications
    action: /xapi/notifications/batch
    method: POST
    contentType: json
    load: XNAT.data.notifications
    refresh: /xapi/notifications
    contents:
        helpContactInfo:
            kind: panel.input.email
            id: helpContactInfo
            name: notifications.helpContactInfo
            label: "Help Contact Info"
            value: "!? XNAT.data.notifications['notifications.helpContactInfo'] || XNAT.data.siteConfig.adminEmail"

        emailMessageSubhead:
            kind: panel.subhead
            label: Email Messages

        emailMessageUserRegistration:
            kind: panel.textarea
            id: emailMessageUserRegistration
            name: notifications.emailMessageUserRegistration
            label: "User Registration"
            description: "Text of message emailed to users upon registration. Link for email validation is auto-populated."
        emailMessageForgotUsernameRequest:
            kind: panel.textarea
            id: emailMessageForgotUsernameRequest
            name: notifications.emailMessageForgotUsernameRequest
            label: "Forgot Username Request"
            description: "Text of message emailed to users upon lost username request."
        emailMessageForgotPasswordReset:
            kind: panel.textarea
            id: emailMessageForgotPasswordReset
            name: notifications.emailMessageForgotPasswordReset
            label: "Password Reset"
            description: "Text of message emailed to users upon lost password reset. Link for password reset is auto-populated"

#        notifyAdminSubhead:
#            kind: panel.subhead
#            label: "Notify Administrator on..."
#
#        notifyAdminUserRegistration:
#            kind: panel.input.checkbox
#            id: notifyAdminUserRegistration
#            name: notifications.notifyAdminUserRegistration
##            value: "?? XNAT:data:siteConfig:notifications.notifyAdminUserRegistration"
#            label: "User Registration"
#            description: "Whether to cc admin user on new user emails. Requires valid admin email address."
#        notifyAdminPipelineEmails:
#            kind: panel.input.checkbox
#            id: notifyAdminPipelineEmails
#            name: notifications.notifyAdminPipelineEmails
##            value: "?? XNAT:data:siteConfig:notifications.notifyAdminPipelineEmails"
#            label: "Pipeline Emails"
#            description: "Whether to cc admin user on pipeline processing submit. Requires valid admin email address."
#        notifyAdminProjectAccessRequest:
#            kind: panel.input.checkbox
#            id: notifyAdminProjectAccessRequest
#            name: notifications.notifyAdminProjectAccessRequest
##            value: "?? XNAT:data:siteConfig:notifications.notifyAdminProjectAccessRequest"
#            label: "Project Access Request"
#            description: "Whether to cc admin user on user project access request. Requires valid admin email address."
#        notifyAdminSessionTransfer:
#            kind: panel.input.checkbox
#            id: notifyAdminSessionTransfer
#            name: notifications.notifyAdminProjectOnSessionTransfer
##            value: "?? XNAT:data:siteConfig:notifications.notifyAdminProjectOnSessionTransfer"
#            label: "Session Transfer"
#            description: "Whether to cc admin user on session transfer by user. Requires valid admin email address."

        emailRecipientSubhead:
            kind: panel.subhead
            label: "Email Recipient(s) for..."

        emailRecipientErrorMessages:
            kind: panel.input.email
            id: emailRecipientErrorMessages
            name: notifications.emailRecipientErrorMessages
            label: "Error Messages"
            description: "What email address(es) should receive error emails. Separate multiple email addresses with commas. If empty, emails will be sent to the site administrator email address."
            value: "!? XNAT.data.notifications['notifications.emailRecipientErrorMessages'] || XNAT.data.siteConfig.adminEmail"
        emailRecipientIssueReports:
            kind: panel.input.email
            id: emailRecipientIssueReports
            name: notifications.emailRecipientIssueReports
            label: "Issue Reports"
            description: "What email address(es) should receive issue reports. Separate multiple email addresses with commas. If empty, emails will be sent to the site administrator email address."
            value: "!? XNAT.data.notifications['notifications.emailRecipientIssueReports'] || XNAT.data.siteConfig.adminEmail"
        emailRecipientNewUserAlert:
            kind: panel.input.email
            id: emailRecipientNewUserAlert
            name: notifications.emailRecipientNewUserAlert
            label: "New User Alert"
            description: "What email address(es) should receive New User Registration emails. Separate multiple email addresses with commas. If empty, emails will be sent to the site administrator email address."
            value: "!? XNAT.data.notifications['notifications.emailRecipientNewUserAlert'] || XNAT.data.siteConfig.adminEmail"
        emailRecipientUpdate:
            kind: panel.input.email
            id: emailRecipientUpdate
            name: notifications.emailRecipientUpdate
            label: "Updates"
            description: "What email address(es) should receive update emails. Separate multiple email addresses with commas. If empty, emails will be sent to the site administrator email address."
            value: "!? XNAT.data.notifications['notifications.emailRecipientUpdate'] || XNAT.data.siteConfig.adminEmail"

        otherSubhead:
            kind: panel.subhead
            label: "Other"

        emailAllowNonuserSubscribers:
            kind: panel.input.checkbox
            id: emailAllowNonuserSubscribers
            name: emailAllowNonuserSubscribers
            label: "Allow Nonuser Subscribers"
            description: "Indicates whether this site should restrict email addresses for site notifications to addresses that are associated with valid active users of the XNAT installation. If turned on, the site is more secure from exploitation as a spam relay, but restricts the addresses that can be used when alerting administrators to system events."
#            value: "?? XNAT.data.siteConfig.emailAllowNonuserSubscribers"

themeManagement:
    kind: panel.form
    name: themeManagement
    label: Theme Management
    action: /xapi/theme
    contents:
        themeScript:
            tag: script
            element:
                src: ~/scripts/xnat/admin/themeManagement.js
        themeStyle:
            tag: style
            element:
                html: ".themeUploader{width:270px;display:inline !important;}"
        currentTheme:
            kind: panel.display
            id: currentTheme
            label: Current Theme
            description: The currently selected global theme.
            value: ""
            element:
                style:
                    color: 'red'
        existingTheme:
            kind: panel.select.single
            id: themeSelection
            name: themeSelection
            label: Select an existing theme
            description: Selected a new global theme from those available on the system.
            value: ""
            options:
                default:
                    label: None
                    value: None
            after:
                - "<span style=\"position: relative; top: -78px;left: 270px;\"> <!-- &nbsp;<button id=\"submitThemeButton\" onclick=\"setTheme();\">Set Theme</button>&nbsp;&nbsp; --> <button id=\"removeThemeButton\" onclick=\"removeTheme();\">Remove Theme</button></span>"
            element:
                style:
                    min-width: 250px
        uploadTheme:
            kind: panel.input.upload
            id: themeFileUpload
            name: xnat.theme.upload
            label: Upload a theme package
            description: Upload a zipped theme package for selection above.
            className: themeUploader

authenticationMethods:
    kind: panel
    name: authenticationMethods
    label: User Authentication Methods
    footer: false
    contents:
        message:
            tag: div.message.bold
            content: >
                By default, XNAT's database is used to manage user accounts. You can also add LDAP or other means of
                user authentication.
        authEditorTemplate:
            tag: "div#auth-editor-template.html-template"
            contents:
                authEditor:
                    kind: panel.form
                    name: authEditor
                    id: auth-editor
                    header: false
                    footer: false
                    action: /xapi/auth
                    contentType: json
                    contents:
                        authName:
                            kind: panel.input.text
                            id: auth-name
                            name: authName
                            label: Auth Name
                            validation: required
                        authAddress:
                            kind: panel.input.text
                            id: auth-address
                            name: authAddress
                            label: Address
                            validation: required
                        authType:
                            kind: panel.input.text
                            id: auth-type
                            name: authType
                            label: Type
                            validation: required
                        authOrder:
                            kind: panel.input.number
                            id: auth-order
                            name: authOrder
                            label: Order
                            validation: naturalNoZero
#                        fileNamer:
#                            kind: panel.input.text
#                            name: fileNamer
#                            label: File Namer
#                        identifier:
#                            kind: panel.input.text
#                            name: identifier
#                            label: Identifier
        authManager:
            tag: "div#auth-manager"
        authManagerScript:
            tag: script
            element:
                src: /scripts/xnat/admin/authManager.js
users:
    kind: panel
    name: users
    label: Users
#    contents:

userRoles:
    kind: panel
    name: userRoles
    label: User Roles
#    contents:


registrationOptions:
    kind: panel.form
    name: registrationOptions
    label: Registration Options
    method: POST
    action: /xapi/siteConfig/batch
    load: XNAT.data.siteConfig
    contentType: json
    contents:
        requireEmailVerificationToRegister:
            kind: panel.input.checkbox
            id: requireEmailVerificationToRegister
            name: emailVerification
            label: "Require Email Verification To Register?"
            description: >
                If true, users will receive an email after registering for an account and must click a
                link in the email to verify their email address before they are able to use their account.
                If false, no verification emails will be sent and users will not be required to verify their email
                before using their account. Either way the administrator receives an email notification when a user registers.
        emailVerificationMessage:
            kind: panel.textarea
            id: emailVerificationMessage
            name: emailVerificationMessage
            label: "Email Verification Message"
            description: Email message sent to newly registered users who have to verify their email address. FULL_NAME will be replaced by the user's first and last name and VERIFICATION_URL will be replaced by the URL where they can verify their email.
        emailVerificationExpiration:
            kind: panel.input.number
            id: emailVerificationExpiration
            name: emailVerificationExpiration
            label: "Email Verification Expiration"
        autoEnableUserRegistration:
            kind: panel.input.checkbox
            id: autoEnableUserRegistration
            name: userRegistration
            label: "Auto-enable User Registration?"
            description: >
                If true, user accounts will be enabled automatically when the user registers. Users will be able to access the site and any 'public'
                projects immediately. If false, the site administrator will be required to manually enable user accounts. Either way the administrator
                receives an email notification when a user registers.
        uiAllowNewUserComments:
            kind: panel.input.checkbox
            id: uiAllowNewUserComments
            name: UI.allow-new-user-comments
            label: "Allow User Comments on Registration?"

manageDataTypes:
    kind: panel.form
    name: manageDataTypes
    label: Manage Data Types
    method: POST
    contentType: json
    action: /xapi/siteConfig/batch
    load: XNAT.data.siteConfig
    refresh: /xapi/siteConfig
    contents:
        displayNameForGenericImageSessionSingular:
            kind: panel.input.text
            id: displayNameForGenericImageSessionSingular
            name: displayNameForGenericImageSession.singular
            label: "Singular Display Name For Generic Image Session Singular"
        displayNameForGenericImageSessionPlural:
            kind: panel.input.text
            id: displayNameForGenericImageSessionPlural
            name: displayNameForGenericImageSession.plural
            label: "Plural Display Name For Generic Image Session Singular"

anonymization:
    kind: panel.form
    name: Anonymization
    label: "Anonymization Script (Site Wide)"
    method: POST
    contentType: json
    action: /xapi/siteConfig/batch
    load: XNAT.data.siteConfig
    refresh: /xapi/siteConfig
    contents:
        enableSitewideAnonymizationScript:
            kind: panel.input.checkbox
            id: enableSitewideAnonymizationScript
            name: enableSitewideAnonymizationScript
            label: "Enable Site-wide Anonymization Script"
        sitewideAnonymizationScript:
            kind: panel.textarea
            id: sitewideAnonymizationScript
            name: sitewideAnonymizationScript
            label: "Edit Anonymization Script"
            description: >
                This is the site-wide anonymization script applied to all incoming and archiving DICOM resources. This script can also be supplemented by anonymization operations specified at the project level. The script must conform to <a href="http://nrg.wustl.edu/software/dicomedit/dicomedit-reference/" target="_blank">DicomEdit</a> format.<br><br>Note that if the site-wide anonymization is enabled, even with an empty script, it will add a deidentification method status entry to DICOM headers. To allow DICOM files to be imported without any changes, disable site-wide anonymization.

seriesImportFilter:
    kind: panel.form
    name: seriesImportFilter
    label: "Series Import Filter (Site Wide)"
    method: POST
    contentType: json
    action: /xapi/siteConfig/batch
    load: XNAT.data.siteConfig
    refresh: /xapi/siteConfig
    contents:
        enableSitewideSeriesImportFilter:
            kind: panel.input.checkbox
            id: enableSitewideSeriesImportFilter
            name: enableSitewideSeriesImportFilter
            label: "Enable Site-wide Series Import Filter"
        sitewideSeriesImportFilterMode:
            kind: panel.select.single
            id: sitewideSeriesImportFilterMode
            name: sitewideSeriesImportFilterMode
            label: Filter Mode
            description: >
                Creating a <b>whitelist</b> means that <i>only</i> DICOM series with a series description that matches one of series filter patterns will be considered by XNAT import tools such as the upload applet. Creating a <b>blacklist</b> means that all DICOM series will be considered <i>except</i> for series that have one of the specified series filter patterns. A <b>modality map</b> lets you specify boolean expressions in JavaScript that can use DICOM header values from incoming DICOM objects to decide the appropriate modality for the destination session.
            options:
                whitelist:
                    label: Whitelist
                    value: whitelist
                blacklist:
                    label: Blacklist
                    value: blacklist
                modalityMap:
                    label: Modality Map
                    value: modalityMap
        sitewideSeriesImportFilter:
            kind: panel.textarea
            id: sitewideSeriesImportFilter
            name: sitewideSeriesImportFilter
            label: "Edit Series Import Filter"
            description: >
                The series filters can be written as exact string matches, but also can be regular expressions. The regular expressions are evaluated using the
                <a href="http://docs.oracle.com/javase/tutorial/essential/regex/" target="_blank">Java regular expression syntax</a>. These expressions are case-insensitive,
                i.e. the string "SAG LOCALIZER" will also match "Sag Localizer".

petTracers:
    kind: panel.form
    name: petTracers
    label: "Pet Tracers (Site Wide)"
    method: POST
    contentType: json
    action: /xapi/siteConfig/batch
    load: XNAT.data.siteConfig
    refresh: /xapi/siteConfig
    contents:
        sitewidePetTracers:
            kind: panel.textarea
            id: sitewidePetTracers
            name: sitewidePetTracers
            label: "Pet Tracers"
            description: >
                This is the site-wide list of PET tracers. List entries should be separated by whitespace. This list can also be replaced at the project level.

sessionUploadMethod:
    kind: panel.form
    name: sessionUploadMethod
    label: "Session Upload Method"
    method: POST
    contentType: json
    action: /xapi/siteConfig/batch
    load: XNAT.data.siteConfig
    refresh: /xapi/siteConfig
    contents:
#        selectUploadMethod:
#            kind: panel.select.single
#            id: selectUploadMethod
#            name: selectUploadMethod
#            label: "Session Upload Method"
##            options:                             # don't know where to populate this from
##                http:
##                    label:
##                    value:
##                https:
##                    label:
##                    value:
#        showApplet:
#            kind: panel.input.checkbox
#            id: showApplet
#            name: showApplet
#            label: Display Applet Link
#            description: "Enable to display link to Upload Applet on various XNAT pages."
        enableProjectAppletScript:
            kind: panel.input.checkbox
            id: enableProjectAppletScript
            name: enableProjectAppletScript
            label: Enable Project Applet Script
            description: "The site-wide applet settings script can be supplemented by applet settings specified at the project level if this setting is enabled."
        appletScript:
            kind: panel.textarea
            id: appletScript
            name: appletScript
            label: "Applet Script"
            description: >
                Details on how to configure an Upload Applet script may be found
                <a href="https://wiki.xnat.org/display/XKB/Adding+parameters+and+launch+requirements+for+the+upload+applet" target="_blank">here</a>.
        sessionXmlRebuilderRepeat:
            kind: panel.input.number
            id: sessionXmlRebuilderRepeat
            name: sessionXmlRebuilderRepeat
            label: Session Xml Rebuilder Repeat
        sessionXmlRebuilderInterval:
            kind: panel.input.number
            id: sessionXmlRebuilderInterval
            name: sessionXmlRebuilderInterval
            label: Session Xml Rebuilder Interval

dicomScpReceivers:
    kind: panel
    name: dicomScpReceivers
    label: Manage DICOM SCP Receivers
    footer: false
    contents:
        message:
            tag: div.message.bold
            content: >
                Caution: Changes to this setting will take effect immediately.
                Before disabling the receiver, verify that there are no
                transmissions currently in progress.
        dicomScpEditorTemplate:
            tag: "div#dicom-scp-editor-template.html-template"
            contents:
                dicomScpEditor:
                    kind: panel.form
                    name: dicomScpEditor
                    id: dicom-scp-editor
                    header: false
                    footer: false
                    action: /xapi/dicomscp
                    contentType: json
                    contents:
                        scpId:
                            kind: panel.input.text
                            id: scp-id
                            name: scpId
                            label: SCP ID
                            validation: required
                        aeTitle:
                            kind: panel.input.text
                            id: scp-title
                            name: aeTitle
                            label: AE Title
                            validation: required
                        port:
                            kind: panel.input.number
                            id: scp-port
                            name: port
                            label: Port
                            validation: required naturalNoZero
#                        fileNamer:
#                            kind: panel.input.text
#                            name: fileNamer
#                            label: File Namer
#                        identifier:
#                            kind: panel.input.text
#                            name: identifier
#                            label: Identifier
        dicomScpManager:
            tag: "div#dicom-scp-manager"
        dicomScpManagerScript:
            tag: script
            element:
                src: /scripts/xnat/admin/dicomScpManager.js

dicomScpReceiversOld:
    kind: panel.form
    name: dicomScpReceiversOld
    label: DICOM SCP Receivers
    method: POST
    action: /xapi/dicomscp
    contentType: json
    load: /xapi/dicomscp
    contents:
        enableDicomReceiver:
            kind: panel.input.checkbox
            id: enableDicomReceiver
            name: enableDicomReceiver
            label: DICOM Receiver Enabled?
            description: "Should the DICOM receiver listen for connections?"
        someInfo:
            tag: div.message
            element:
                html: "Caution: Changes to this setting will take effect immediately. Before disabling the receiver, verify that there are no transmissions currently in progress."
                style:
                    fontWeight: bold
        enableDicomReceiverPropertyChangedListener:   # Should this be a hidden form element??
            kind: panel.input.text
            id: enableDicomReceiverPropertyChangedListener
            name: enableDicomReceiverPropertyChangedListener      #  Should this be "enableDicomReceiver.property.changed.listener"
            label: "Enable Dicom Receiver Property Changed Listener"
        dicomHost:
            kind: panel.input.text
            id: dicomHost
            name: dicomHost
            label: DICOM Host
            description: "Hostname(s) for DICOM Receiver(s)"
        dicomAeTitle:
            kind: panel.input.text
            id: dicomAeTitle
            name: dicomAeTitle
            label: DICOM AE Title
            description: "AE Title(s) for DICOM Receiver(s)"
        dicomPortNumber:
            kind: panel.input.number
            id: dicomPortNumber
            name: dicomPortNumber
            label: DICOM Port
            description: "Port for DICOM Receiver(s)"
        defaultDicomReceiver:
            kind: panel.select.single
            id: defaultDicomReceiver
            name: services.dicom.scp.aetitle
            label: Default DICOM Receiver
            description: "AE Title for default DICOM receiver"
        receivedFileUser:
            kind: panel.input.text
            id: receivedFileUser
            name: receivedFileUser
            label: "Default DICOM Receiver: User"
            description: "User account for default DICOM receiver"

fileSystem:
    kind: panel.form
    name: fileSystem
    label: File System
    method: POST
    contentType: json
    action: /xapi/siteConfig/batch
    load: XNAT.data.siteConfig
    contents:
        ${archivePath}
        ${cachePath}
        ${prearchivePath}
        ${ftpPath}
        ${buildPath}
        ${pipelinePath}
        ${zipExtensions}
        ${checksums}
#        ${checksumsPropertyChangedListener}

misc:
    kind: panel.form
    name: misc
    label: Miscellaneous
    method: POST
    contentType: json
    action: /xapi/siteConfig/batch
    load: XNAT.data.siteConfig
    refresh: /xapi/siteConfig
    contents:
        scanTypeMapping:
            kind: panel.input.checkbox
            id: scanTypeMapping
            name: scanTypeMapping
            label: Scan Type Mapping?
        development:
            kind: panel.subhead
            label: Development Utilities
        spawner:
            kind: panel.element
            description: Manage spawner elements.
            contents:
                link:
                    tag: a.link
                    element:
                        href: ~/page/admin/spawner/
                        target: _blank
                        html: Manage Spawner Elements
        swagger:
            kind: panel.element
            description: View the Swagger page.
            contents:
                link:
                    tag: a.link
                    element:
                        href: ~/xapi/swagger-ui.html
                        target: _blank
                        html: Swagger


#################################################
####  Root Site Admin Spawner Config Object  ####
#################################################
adminPage:
    kind: tabs
    name: adminPage
    label: Administer XNAT
    meta:
        ${tabGroups}
    contains: tabs
    tabs:  # this property name is the same as 'contains', so it will be treated like 'contents'
        siteSetup:
            kind: tab
            name: siteSetup
            label: Site Setup
            group: xnatSetup
            active: true
            contents:
                ${siteInfo}
                ${adminInfo}
        security:
            kind: tab
            name: security
            label: Security
            group: xnatSetup
            contents:
                ${generalSecuritySettings}
                ${userLoginsSessionControls}
                ${passwords}
                ${csrf}
                ${securityServices}
        emailServer:
            kind: tab
            name: emailServer
            label: Email Server
            group: xnatSetup
            contents:
                ${emailServerSettings}
        notifications:
            kind: tab
            name: notifications
            label: Notifications
            group: xnatSetup
            contents:
                ${notifications}
        themesAndFeatures:
            kind: tab
            name: themesAndFeatures
            label: Themes & Features
            group: xnatSetup
            contents:
                ${themeManagement}
        authenticationMethods:
            kind: tab
            name: authenticationMethods
            label: Authentication Methods
            group: manageAccess
            contents:
                ${authenticationMethods}
                ${genericAuthenticationProvider}
                ${ldapAuthentication}
#        users:            # enable when users table can be re-implemented in spawner, until then use old users config?
#            kind: tab
#            name: users
#            label: Users
#            group: manageAccess
#            contents:
#                ${users}
#        userRoles:        # enable when user roles table can be re-implemented in spawner, until then use old user roles config?
#            kind: tab
#            name: userRoles
#            label: User Roles
#            group: manageAccess
#            contents:
#                ${userRoles}
        registrationOptions:
            kind: tab
            name: registrationOptions
            label: Registration Options
            group: manageAccess
            contents:
                ${registrationOptions}
#        manageDataTypes:
#            kind: tab
#            name: manageDataTypes
#            label: Manage Data Types
#            group: manageData
#            contents:
#                ${manageDataTypes}
        sessionUploadImportAnonymization:
            kind: tab
            name: sessionUploadImportAnonymization
            label: "Session Upload, Import & Anonymization"
            group: manageData
            contents:
                ${anonymization}
                ${seriesImportFilter}
                ${petTracers}
                ${sessionUploadMethod}
        dicomScpReceivers:
            kind: tab
            name: dicomScpReceivers
            label: DICOM SCP Receivers
            group: advanced
            contents:
                ${dicomScpReceivers}
        fileSystem:
            kind: tab
            name: fileSystem
            label: File System
            group: advanced
            contents:
                ${fileSystem}
        misc:
            kind: tab
            name: misc
            label: Miscellaneous
            contents:
                ${misc}


###########################################
####  Initial Site Setup Admin Panels  ####
###########################################
setupMessage:
    tag: div.message
    element:
        style:
            marginBottom: 24px
        html: >
            The settings below need to be configured before this XNAT system
            can be used. Please set the properties below and submit the form to continue.

siteSetupSiteInfo:
    kind: panel.form
    name: siteSetupSiteInfo
    label: Site Information
    footer: false
    method: POST
    action: /xapi/siteConfig/batch
    contentType: json
    load: /xapi/siteConfig
    contents:
        ${siteId}
        ${siteUrl}
        ${adminEmail}

dataStorage:
    kind: panel.form
    name: dataStorage
    label: File System
    footer: false
    method: POST
    contentType: json
    action: /xapi/siteConfig/batch
    load: XNAT.data.siteConfig
    refresh: /xapi/siteConfig
    contents:
        ${archivePath}
        ${prearchivePath}
        ${ftpPath}
        ${buildPath}
        ${bipelinePath}
        ${cachePath}
#        ${zipExtensions}
#        ${checksums}
#        ${checksumsPropertyChangedListener}


initialSetup:
    kind: app.siteSetup.form
    name: initialSetup
    label: XNAT Initial Setup
    contents:
        ${setupMessage}
        ${setupSiteInfo}
        ${fileSystem}
        ${emailServerSettings}
